#!/bin/bash

case $1 in

    prepare)
if [ ! -f /usr/share/kxstudio/make_live/install/mt86plus ]; then
 echo "Not installed correctly!!"
 exit
fi

if [ -d /tmp/livecd ]; then
rm -rf /tmp/livecd
fi
mkdir -p /tmp/livecd
mkdir -p ~/livecd
mkdir -p ~/livecd/cd
mkdir -p ~/livecd/cd/.disk
sudo cp -r /usr/share/kxstudio/make_live/* ~/livecd/cd
echo "done"
    ;;

    mount)
if [ $2"0" == "0" ]; then
echo "usage: $0 mount <iso-image>"
exit
fi

if [ -d /tmp/livecd ]; then
rm -rf /tmp/livecd
fi
mkdir -p /tmp/livecd
sudo mount -o loop $2 /tmp/livecd
mkdir -p ~/livecd
mkdir -p ~/livecd/cd
rsync --exclude=/casper/filesystem.squashfs -a /tmp/livecd/ ~/livecd/cd
sudo rm -rf ~/livecd/cd/autorun.inf ~/livecd/cd/pics ~/livecd/cd/wubi.exe
#sudo rm -rf ~/livecd/cd/dists ~/livecd/cd/pool ~/livecd/cd/ubuntu
echo "done"
    ;;

    squash)
# sudo mkdir ~/livecd/custom/ ~/livecd/squashfs/
# sudo modprobe squashfs
# sudo mount -t squashfs -o loop /tmp/livecd/casper/filesystem.squashfs ~/livecd/squashfs/
# sudo cp -a ~/livecd/squashfs/* ~/livecd/custom

case $2 in

        i386|amd64)
sudo debootstrap --arch=$2 lucid ~/livecd/custom
echo "done"
        ;;

        *)
echo "usage: $0 squash <arch>"
        ;;
esac
    ;;

    custom)
sudo cp /etc/resolv.conf /etc/hosts ~/livecd/custom/etc/
echo "run this now:

mount -t proc none /proc/
mount -t sysfs none /sys/
mount -t devpts none /dev/pts
export HOME=/root
export LANG=C
"
echo "
apt-get update
apt-get install python-software-properties wget
add-apt-repository ppa:falk-t-j/kxstudio
apt-get update
apt-get install kxstudio-repos -y
apt-get update
apt-get dist-upgrade
apt-get install ubuntu-standard laptop-detect os-prober
apt-get install kxstudio-kernel-generic-pae|kxstudio-kernel-preempt
apt-get install kxstudio-desktop-full kxstudio-meta-conflict
apt-get install kxstudio-meta-conflict
apt-get remove kxstudio-meta-conflict vst-plugin-hypercyclic vst-plugin-pizmidi-pack vst-plugin-pizmidi-pack-extra
apt-get autoremove

# ----- PAUSE HERE ------ #
# Before installing ubiquity in the live session, you'll need to run this outside:
$ sudo touch ~/livecd/cd/casper/filesystem.manifest-desktop
$ sudo chmod 777 ~/livecd/cd/casper/filesystem.manifest-desktop
$ sudo chroot ~/livecd/custom dpkg-query -W --showformat='\${Package} \${Version}\n' > ~/livecd/cd/casper/filesystem.manifest-desktop
## ----- END PAUSE ----- ##

# Now install the liveDVD specific packages
apt-get install ubiquity-frontend-kde casper lupin-casper discover1 jfsutils ntfsprogs xfsprogs

# Other hacks:
adduser ubuntu
addgroup ubuntu audio
addgroup ubuntu video
addgroup ubuntu sixad
addgroup ubuntu admin

# No passwd hack:
nano /etc/shadow
'ubuntu:U6aMy0wojraho:14...'
"
sudo chroot ~/livecd/custom
echo "done"
exit
    ;;

    custom_end)
echo "run this now:

#rm -f /sbin/initctl
#dpkg-divert --rename --remove /sbin/initctl

rm -f /var/kxstudio/*

apt-get clean
rm -rf /tmp/*
rm -f /etc/hosts /etc/resolv.conf
umount /dev/pts
umount /proc/ # to force: 'umount -lf /proc'
umount /sys/
exit
"
  ;;

    mksquash)
sudo touch ~/livecd/cd/casper/filesystem.manifest
sudo chmod 777 ~/livecd/cd/casper/filesystem.manifest
sudo chroot ~/livecd/custom dpkg-query -W --showformat='${Package} ${Version}\n' > ~/livecd/cd/casper/filesystem.manifest
sudo rm -f ~/livecd/cd/casper/filesystem.squashfs
sudo mksquashfs ~/livecd/custom ~/livecd/cd/casper/filesystem.squashfs -noappend
cd ~/livecd/
sudo su root -c "printf $(sudo du -sx --block-size=1 custom | cut -f1) > cd/casper/filesystem.size"
echo "done"
exit
    ;;

    mkrepo)
if [ ! -d $2 ]; then
echo "$2 is not a folder!"
exit
fi

sudo mkdir -p ~/livecd/cd/pool/extra/
sudo cp $2/* ~/livecd/cd/pool/extra/

FOLDERS="0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s t u v x y z"

cd ~/livecd/cd/pool/extra/
for i in $FOLDERS; do
sudo mkdir -p ./$i/
sudo cp ./$i* ./$i/ > /dev/null
done
sudo rmdir ./* > /dev/null
sudo rm ./* > /dev/null
    ;;

    mkrelease)
#start
case $2 in
    amd64|i386)
sudo mkdir -p ~/livecd/cd/dists/lucid/extra/binary-$2
sudo cp /usr/share/kxstudio/make_alternate/Release.bak_ ~/livecd/cd/dists/lucid/
sudo sed "s/M_WWW_M/$2/" -i ~/livecd/cd/dists/lucid/Release.bak_
sudo cp /usr/share/kxstudio/make_alternate/Release ~/livecd/cd/dists/lucid/extra/binary-$2/
sudo sed "s/M_WWW_M/$2/" -i ~/livecd/cd/dists/lucid/extra/binary-$2/Release
cd ~/livecd/cd/
sudo su root -c "apt-ftparchive packages pool/extra > dists/lucid/extra/binary-$2/Packages"
sudo su root -c "apt-ftparchive packages pool/extra | gzip -c -9 > dists/lucid/extra/binary-$2/Packages.gz"
sudo rm -f dists/lucid/Release dists/lucid/Release.gpg
sudo cp dists/lucid/Release.bak_ dists/lucid/Release
sudo su root -c "apt-ftparchive release dists/lucid >> dists/lucid/Release"
sudo gpg --default-key 29213837 --output dists/lucid/Release.gpg -ba dists/lucid/Release
sudo rm -f dists/lucid/Release.bak_
    ;;
    *)
echo "wrong arch type, must be amd64 or i386"
exit
    ;;
esac
#end
    ;;

    mkboot)
cd ~/livecd/
sudo rm -f cd/casper/vmlinuz cd/casper/initrd.lz
sudo cp custom/boot/vmlinuz-2.6.* cd/casper/vmlinuz
sudo cp custom/boot/initrd.img-2.6.* cd/casper/initrd_tmp.gz

cd ~/livecd/cd/casper
sudo mkdir ext
cd ext
sudo su root -c '7z x -so ../initrd_tmp.gz | cpio -id'
#sudo sed -i "s/log_end_msg/\/root\/usr\/sbin\/addgroup audio \"\$USERNAME\"\n\/root\/usr\/sbin\/addgroup video \"\$USERNAME\"\n\/root\/usr\/sbin\/addgroup sixad \"\$USERNAME\"\nlog_end_msg/" scripts/casper-bottom/10adduser
sudo su root -c 'find . | cpio --dereference -o -H newc | lzma -7 > ../initrd.lz'
cd ..
sudo rm -rf ext initrd_tmp.gz

echo "done"
    ;;

    mkart)
ARG2="$2"
ARG3="$3"
if [ $ARG3"0" == "0" ]; then
echo "usage: $0 mkart <type> <path-to-KXStudio-Artwork>"
exit
fi

#start
case $ARG2 in

        live32)
sudo cp $ARG3/ISO/_disk/live32/* ~/livecd/cd/.disk
sudo cp ~/livecd/cd/README.diskdefines_i386 ~/livecd/cd/README.diskdefines
sudo rm ~/livecd/cd/README.diskdefines_*
        ;;

        live64)
sudo cp $ARG3/ISO/_disk/live64/* ~/livecd/cd/.disk
sudo cp ~/livecd/cd/README.diskdefines_amd64 ~/livecd/cd/README.diskdefines
sudo rm ~/livecd/cd/README.diskdefines_*
        ;;

        alt32)
sudo cp $ARG3/ISO/_disk/alt32/* ~/livecd/cd/.disk
sudo cp -r $ARG3/ISO/alternate/* ~/livecd/cd/
sudo cp $ARG3/ISO/README.diskdefines_i386 ~/livecd/cd/README.diskdefines
        ;;

        alt64)
sudo cp $ARG3/ISO/_disk/alt64/* ~/livecd/cd/.disk
sudo cp -r $ARG3/ISO/alternate/* ~/livecd/cd/
sudo cp $ARG3/ISO/README.diskdefines_amd64 ~/livecd/cd/README.diskdefines
        ;;

        net)
sudo cp $ARG3/ISO/isolinux/splash.png ~/livecd/cd/
sudo cp $ARG3/ISO/_disk/net/* ~/livecd/cd/
        ;;


        *)
echo "usage: $0 mkart <type> <path-to-KXStudio-Artwork>

type can be:
  live32
  live64
  alt32
  alt64
  net
"
exit
        ;;

esac
#end
    ;;

    md5sum)
cd ~/livecd/cd
sudo rm -f ./md5sum.txt
sudo su root -c "find . -type f -print0 | xargs -0 md5sum > md5sum.txt"
echo "done"
    ;;

    iso)
ARG2="$2"
if [ $ARG2"0" == "0" ]; then
echo "usage: $0 iso <label>"
exit
fi

cd ~/livecd/cd
isolinux=`find . -name isolinux.bin | head -n 1 | awk 'sub("./","")'`
bootcat=`find . -name boot.cat | head -n 1 | awk 'sub("./","")'`
sudo mkisofs -r -V "$ARG2" -b $isolinux -c $bootcat -cache-inodes -J -l -no-emul-boot -boot-load-size 4 -boot-info-table -input-charset utf-8 -o ~/$ARG2.iso .
echo "done"
    ;;

    clean)
sudo umount /tmp/livecd/
sudo umount ~/livecd/squashfs/
sudo rm -rf /tmp/livecd/
sudo rm -rf ~/livecd/
echo "done"
    ;;

    h|-h|help|-help|--help)
echo "Correct Order to Create ISOs:

LiveDVD:
- prepare
- squash <arch>
- custom
- custom_end
- mksquash
- mkboot
- mkart live32|live64 ART
- md5sum
- iso <label>

AlternateDVD:
- mount ISO [alternateCD]
- alt_copy amd64|i386 REPO
- mkart alt32|alt64 ART
- iso

NetBoot:
- mount ISO [ubuntu net-boot]
- mkart net ART
- iso <label>

"
    ;;

    *)
echo "usage: $0 <cmd>

cmd can be: (Alternate/Live/Netboot)

 L 1 - prepare
A N1 - mount <iso-image>
 L 2 - squash <arch>
 L 3 - custom
 L 4 - custom_end
 L 5 - mksquash
A  2 - mkrepo <path-to-debs>
A  3 - mkrelease <arch>
 L 6 - mkboot
ALN7 - mkart <type> <path-to-KXStudio-Artwork>
AL 8 - md5sum
ALN9 - iso <label>

x - clean
h - help
"
    ;;
esac
