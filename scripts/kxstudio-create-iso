#!/bin/bash

# Debian fix
export PATH=/usr/sbin/:$PATH

# Check dependencies
if (which 7z > /dev/null); then true; else
  echo "7z not found, please install it"
  exit
fi

if (which debootstrap > /dev/null); then true; else
  echo "debootstrap not found, please install it"
  exit
fi

if (which cpio > /dev/null); then true; else
  echo "cpio not found, please install it"
  exit
fi

if (which lzma > /dev/null); then true; else
  echo "lzma not found, please install it"
  exit
fi

if (which genisoimage > /dev/null); then true; else
  echo "genisoimage not found, please install it"
  exit
fi

if (which mksquashfs > /dev/null); then true; else
  echo "mksquashfs not found, please install it"
  exit
fi

case $1 in

    squash)
sudo debootstrap --arch=$3 $2 ~/livecd/custom http://archive.ubuntu.com/ubuntu/
exit
    ;;

    custom)
sudo mount --bind /dev ~/livecd/custom/dev
sudo cp /etc/resolv.conf /etc/hosts ~/livecd/custom/etc/
echo "run this now:

mount -t proc none /proc/
mount -t sysfs none /sys/
mount -t devpts none /dev/pts
export HOME=/root
export LANG=C
unset LC_TIME
"
echo "
SAVE THIS INFORMATION BELLOW, AND RUN IT ONE AT A TIME:

# Update Sources
apt-get update
apt-get install software-properties-common wget
add-apt-repository -y ppa:kxstudio-debian/kxstudio
add-apt-repository -y ppa:blue-shell/firefox-kde
# add-apt-repository -y ppa:irie/blender
apt-get update
apt-get install kxstudio-repos
apt-get clean

# Check /etc/apt/sources.list
echo 'deb http://archive.ubuntu.com/ubuntu/ trusty main restricted universe multiverse
# deb-src http://archive.ubuntu.com/ubuntu/ trusty main restricted universe multiverse

deb http://archive.ubuntu.com/ubuntu/ trusty-updates main restricted universe multiverse
# deb-src http://archive.ubuntu.com/ubuntu/ trusty-updates main restricted universe multiverse

deb http://archive.ubuntu.com/ubuntu/ trusty-backports main restricted universe multiverse
# deb-src http://archive.ubuntu.com/ubuntu/ trusty-backports main restricted universe multiverse

deb http://security.ubuntu.com/ubuntu trusty-security main restricted universe multiverse
# deb-src http://security.ubuntu.com/ubuntu trusty-security main restricted universe multiverse

deb http://archive.canonical.com/ubuntu trusty partner
# deb-src http://archive.canonical.com/ubuntu trusty partner' > /etc/apt/sources.list

# Update System
apt-get update; apt-get dist-upgrade

# Base Install
apt-get install ubuntu-standard laptop-detect os-prober

# Fix upstart
dpkg-divert --local --rename --add /sbin/initctl
ln -s /bin/true /sbin/initctl
touch /etc/init.d/systemd-logind
apt-get install -f
rm /etc/init.d/systemd-logind
rm /sbin/initctl
dpkg-divert --local --rename --remove /sbin/initctl

# Kernel Install
apt-get install linux-lowlatency # skip grub install/configure to HDD here

# Clean previous
apt-get purge kxstudio-kernel*
apt-get purge libkscreen0 libslv2-9 libtaskmanager4abi4
apt-get purge libllvm3.2 libllvm3.2:i386
apt-get purge libwayland-ltsr0 libxrandr-ltsr2
apt-get purge linux-generic-lts-raring linux-headers-generic-lts-raring linux-image-generic-lts-raring
apt-get purge linux-headers-3.8.0-30-lowlatency linux-image-3.8.0-30-lowlatency linux-lowlatency-headers-3.8.0-30
apt-get purge linux-headers-3.8.0-31 linux-headers-3.8.0-31-generic linux-image-3.8.0-31-generic
apt-get purge lts-quantal*
apt-get purge lts-quantal*:i386
apt-get purge lts-raring*
apt-get purge lts-raring*:i386
apt-get purge wine1.4*
apt-get purge wine1.4*:i386
apt-get clean

# Install packages (Download)
apt-get install -d jackd2 carla-git kxstudio-desktop-kde4 kxstudio-desktop kxstudio-meta-all kubuntu-restricted-extras kxstudio-meta-restricted-extras

# Install packages (Install)
apt-get install jackd2 carla-git kxstudio-desktop-kde4 kxstudio-desktop kxstudio-meta-all kubuntu-restricted-extras kxstudio-meta-restricted-extras

# Test
rm /var/cache/apt/archives/wine-rt*

# Fix
touch /etc/init.d/modemmanager
apt-get install -f
rm /etc/init.d/modemmanager
apt-get clean

# Network Manager
apt-get install network-manager-gnome
apt-get purge plasma-widget-networkmanagement

apt-get install plasma-widget-networkmanagement
apt-get purge network-manager-gnome gnome-icon-theme humanity-icon-theme libgnome-bluetooth11 libgnome-keyring-common libgnome-keyring0 libnm-gtk-common libnm-gtk0

# Install extras
apt-get install carla-git
apt-get install indicator-cpufreq
apt-get install sni-qt
apt-get install kxstudio-docs
apt-get install firefox firefox-kde-support
apt-get install ubuntu-extras-keyring
apt-get install libgl1-mesa-dri
apt-get install libgl1-mesa-glx
apt-get install libegl1-mesa
apt-get install libegl1-mesa-drivers
apt-get install libglapi-mesa
apt-get install libgles2-mesa
apt-get install libglu1-mesa
apt-get install libtxc-dxtn-s2tc0

# 64bit fix
dpkg --add-architecture i386
apt-get update; apt-get dist-upgrade
apt-get install sni-qt:i386
apt-get install libgl1-mesa-dri:i386
apt-get install libgl1-mesa-glx:i386
apt-get install libegl1-mesa:i386
apt-get install libegl1-mesa-drivers:i386
apt-get install libglapi-mesa:i386
apt-get install libgles2-mesa:i386
apt-get install libglu1-mesa:i386
apt-get install libtxc-dxtn-s2tc0:i386

# Remove deprecated/dummy
apt-get purge amsynth-dssi drumkv1-lv2 samplv1-lv2 synthv1-lv2
apt-get purge calf-plugins-git
apt-get purge composite composite-data
apt-get purge hydrogen-drumkits fluid-soundfont-gm
apt-get purge kxstudio-kernel-lowlatency

# Remove unwanted
apt-get purge vlc-plugin-pulse gstreamer0.10-pulseaudio xterm rtkit pulseaudio-utils libpulsedsp
apt-get purge pulseaudio*
apt-get purge loomer-plugins*
apt-get purge linuxdsp-plugins*
apt-get purge pianoteq*
apt-get purge renoise*
apt-get purge lilypond*
apt-get purge libjack-jackd2-0
apt-get purge libjack-jackd2-0:i386

# Cleanup
apt-get autoremove
apt-get clean

dpkg -l | grep "rc "

## ---- PAUSE HERE ----- ##
# Before installing ubiquity in the live session, you'll need to run this outside:
$ sudo mkdir -p ~/livecd/cd/casper/
$ sudo touch ~/livecd/cd/casper/filesystem.manifest-desktop
$ sudo chmod 777 ~/livecd/cd/casper/filesystem.manifest-desktop
$ sudo chroot ~/livecd/custom dpkg-query -W --showformat='\${Package} \${Version}\n' > ~/livecd/cd/casper/filesystem.manifest-desktop"

# sudo chroot ~/livecd/custom dpkg-query -W --showformat='${Package} ${Version}\n' > ~/livecd/cd/casper/filesystem.manifest-desktop

echo "## ----- END PAUSE ----- ##

# Now use locate
apt-get clean
/usr/bin/updatedb.mlocate

# Now install the liveDVD specific packages
apt-get install ubiquity-frontend-kde casper lupin-casper discover jfsutils xfsprogs

# Just in case you want to revert the live-dvd install action
apt-get purge ubiquity-frontend-kde casper lupin-casper discover jfsutils xfsprogs \
archdetect-deb discover-data dpkg-repack libdebian-installer4 libdevmapper-event1.02.1 \
libdiscover2 localechooser-data lvm2 python3-icu python3-pam rdate ubiquity-casper \
ubiquity-ubuntu-artwork user-setup watershed apt-clone sbsigntool
"
sudo chroot ~/livecd/custom
echo "done"
exit
    ;;

    custom_end)
echo "run this now:

#rm -f /sbin/initctl
#dpkg-divert --rename --remove /sbin/initctl

rm -f /var/kxstudio/*

apt-get clean
rm -rf /tmp/*
rm -f /etc/hosts /etc/resolv.conf
ln -s /run/resolvconf/resolv.conf /etc/resolv.conf
umount /dev/pts
umount /proc/ # to force: 'umount -lf /proc'
umount /sys/
exit
"
exit
  ;;

    mksquash)
sudo mkdir -p ~/livecd/cd/casper/
cd ~/livecd/
sudo su root -c "printf $(sudo du -sx --block-size=1 custom | cut -f1) > cd/casper/filesystem.size"
sudo touch ~/livecd/cd/casper/filesystem.manifest
sudo chmod 777 ~/livecd/cd/casper/filesystem.manifest
sudo chroot ~/livecd/custom dpkg-query -W --showformat='${Package} ${Version}\n' > ~/livecd/cd/casper/filesystem.manifest
sudo rm -f ~/livecd/cd/casper/filesystem.squashfs
sudo mksquashfs ~/livecd/custom ~/livecd/cd/casper/filesystem.squashfs -noappend -comp xz
echo "done"
exit
    ;;

    mkart)
if [ ! -f ~/livecd/iso-stuff.7z ]; then
  echo "Please copy iso-stuff.7z to ~/livecd before continuing"
  exit
fi

ISO_ARCH="$2"
ISO_NAME="$3"

if [ $ISO_ARCH"0" == "0" ]; then
echo "usage: $0 mkart <arch> <distro>"
exit
fi

if [ $ISO_NAME"0" == "0" ]; then
echo "usage: $0 mkart $ISO_ARCH <distro>"
exit
fi

sudo mkdir -p ~/livecd/cd
cd ~/livecd/cd
sudo 7z x -y ../iso-stuff.7z

sudo sed "s/X-ISO_ARCH-X/$ISO_ARCH/" -i ~/livecd/cd/README.diskdefines
sudo sed "s/X-ISO_NAME-X/$ISO_NAME/" -i ~/livecd/cd/README.diskdefines
sudo sed "s/X-ISO_NAME-X/$ISO_NAME/" -i ~/livecd/cd/isolinux/txt.cfg
sudo mkdir -p ~/livecd/cd/.disk/

if [ "$ISO_ARCH" == "i386" ]; then
sudo su root -c 'echo "KXStudio 14.04 (Live 32bit)" > .disk/info'
else
sudo su root -c 'echo "KXStudio 14.04 (Live 64bit)" > .disk/info'
fi

sudo su root -c 'echo "http://kxstudio.sourceforge.net/Documentation:KXStudio1404:ReleaseNotes" > .disk/release_notes_url'

echo "Please edit these files manually:
~/livecd/cd/.disk/info
~/livecd/cd/.disk/release_notes_url
~/livecd/cd/README.diskdefines
~/livecd/cd/isolinux/txt.cfg
~/livecd/cd/preseed/live.seed
"
exit
    ;;

    mkboot)
sudo mkdir -p ~/livecd/cd/casper/
cd ~/livecd/
sudo rm -f cd/casper/vmlinuz cd/casper/initrd.lz cd/casper/initrd_tmp.gz
sudo cp custom/boot/vmlinuz-* cd/casper/vmlinuz
sudo cp custom/boot/initrd.img-* cd/casper/initrd_tmp.gz

cd ~/livecd/cd/casper
sudo rm -rf ext
sudo mkdir ext
cd ext
sudo su root -c 'gzip -cd ../initrd_tmp.gz | cpio -i'

# 32bit fix?
LINKS=`find . -type l`
for i in $LINKS; do
  FILE=`readlink $i`
  if [ "$FILE" == "busybox" ]; then
    FILE="./bin/busybox"
  elif [ "$FILE" == "lvm" ]; then
    FILE="./sbin/lvm"
  fi
  FILE="./$FILE"
  sudo rm "$i"
  sudo cp -v "$FILE" "$i"
done

sudo su root -c 'find . | cpio --dereference -o -H newc | lzma -7 > ../initrd.lz'
cd ..
sudo rm -rf ext initrd_tmp.gz

echo "done"
exit
    ;;

    md5sum)
cd ~/livecd/cd
sudo rm -f md5sum.txt MD5SUMS
sudo su root -c "find . -type f -print0 | xargs -0 md5sum > md5sum.txt"
# sudo cp md5sum.txt MD5SUMS
echo "done"
exit
    ;;

    iso)
ARG2="$2"
if [ $ARG2"0" == "0" ]; then
echo "usage: $0 iso <label>"
exit
fi

cd ~/livecd/cd
isolinux=`find . -name isolinux.bin | head -n 1 | awk 'sub("./","")'`
bootcat=`find . -name boot.cat | head -n 1 | awk 'sub("./","")'`
sudo chmod 777 -R .
sudo genisoimage -r -V "$ARG2" -b $isolinux -c $bootcat -cache-inodes -J -l -no-emul-boot -boot-load-size 4 -boot-info-table -input-charset utf-8 -o ~/$ARG2.iso .
echo "done"
exit
    ;;

    clean)
sudo umount /tmp/livecd/
sudo umount ~/livecd/squashfs/
sudo rm -rf /tmp/livecd/
sudo rm -rf ~/livecd/
echo "done"
exit
    ;;

    *)
echo "usage: $0 <cmd>

 1 - squash <version> <arch> [version=trusty] [arch=i386/amd64]
 2 - custom
 3 - custom_end
 4 - mksquash
 5 - mkart <arch> <distro-name> [arch=i386/amd64] [distro=KXStudio (no spaces!)]
 6 - mkboot
 7 - md5sum
 8 - iso <label> [label=KXStudio_12.04_32bit (no spaces!)]

 x - clean
"
exit
    ;;
esac
