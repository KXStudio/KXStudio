#!/bin/bash

# Debian fix
export PATH=/usr/sbin/:$PATH

# Check dependencies
if (which 7z > /dev/null); then true; else
  echo "7z not found, please install it"
  exit
fi

if (which cpio > /dev/null); then true; else
  echo "cpio not found, please install it"
  exit
fi

if (which debootstrap > /dev/null); then true; else
  echo "debootstrap not found, please install it"
  exit
fi

if (which gzip > /dev/null); then true; else
  echo "gzip not found, please install it"
  exit
fi

if (which lzma > /dev/null); then true; else
  echo "lzma not found, please install it"
  exit
fi

if (which mksquashfs > /dev/null); then true; else
  echo "mksquashfs not found, please install it"
  exit
fi

if (which xorriso > /dev/null); then true; else
  echo "xorriso not found, please install it"
  exit
fi

case $1 in

    squash)
sudo debootstrap --arch=$3 $2 /home/falktx/livecd/custom http://archive.ubuntu.com/ubuntu/
exit
    ;;

    custom)
# sudo mount --bind /dev /home/falktx/livecd/custom/dev
sudo rm -f /home/falktx/livecd/custom/etc/hosts
sudo rm -f /home/falktx/livecd/custom/etc/resolv.conf
sudo cp /etc/resolv.conf /etc/hosts /home/falktx/livecd/custom/etc/
echo "run this now:

mount -t proc none /proc/
mount -t sysfs none /sys/
mount -t devpts none /dev/pts
export HOME=/root
export LANG=C
export LC_ALL=C
unset LC_TIME
"
echo "
SAVE THIS INFORMATION BELLOW, AND RUN IT ONE AT A TIME:

# Update Sources
apt-get update
apt-get install software-properties-common wget
add-apt-repository -y ppa:kxstudio-debian/kxstudio
add-apt-repository -y ppa:kxstudio-debian/kde5-neon
sed -i 's/bionic/trusty/' /etc/apt/sources.list.d/kxstudio-debian-ubuntu-kxstudio-bionic.list
add-apt-repository -y ppa:plasmazilla/releases
apt-get update
apt-get install kxstudio-repos kxstudio-repos-gcc5
rm /etc/apt/sources.list.d/kxstudio-debian-ubuntu-kxstudio-bionic.list
apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E6D4736255751E5D
apt-get clean

# Check /etc/apt/sources.list
echo 'deb http://archive.ubuntu.com/ubuntu/ bionic main restricted universe multiverse
# deb-src http://archive.ubuntu.com/ubuntu/ bionic main restricted universe multiverse

deb http://archive.ubuntu.com/ubuntu/ bionic-updates main restricted universe multiverse
# deb-src http://archive.ubuntu.com/ubuntu/ bionic-updates main restricted universe multiverse

deb http://archive.ubuntu.com/ubuntu/ bionic-backports main restricted universe multiverse
# deb-src http://archive.ubuntu.com/ubuntu/ bionic-backports main restricted universe multiverse

deb http://security.ubuntu.com/ubuntu/ bionic-security main restricted universe multiverse
# deb-src http://security.ubuntu.com/ubuntu/ bionic-security main restricted universe multiverse

deb http://archive.canonical.com/ubuntu/ bionic partner
# deb-src http://archive.canonical.com/ubuntu/ bionic partner
' > /etc/apt/sources.list

# Update System
apt-get update; apt-get dist-upgrade

# Base Install
apt-get install --no-install-recommends ubuntu-standard laptop-detect os-prober \
 libpam-systemd command-not-found friendly-recovery nano ntfs-3g ufw uuid-runtime \
 bash-completion geoip-database irqbalance manpages net-tools powermgmt-base ppp pppconfig pppoeconf \
 cryptsetup lvm2 plymouth plymouth-theme-ubuntu-text kxstudio-meta-live-conflicts

# Kernel Install
apt-get install linux-lowlatency linux-image-lowlatency linux-headers-lowlatency kxstudio-meta-live-conflicts # skip grub install/configure to HDD here
apt-get purge linux-headers-4.15.0-30 linux-headers-4.15.0-30-lowlatency linux-image-4.15.0-30-lowlatency linux-modules-4.15.0-30-lowlatency
apt-get clean

# Neon repos
echo 'deb [arch=amd64] http://archive.neon.kde.org/user/lts/ bionic main
# deb-src http://archive.neon.kde.org/user/lts/ bionic main
' > /etc/apt/sources.list.d/neon.list

# Update System
apt-get update; apt-get dist-upgrade

# Install packages (KXStudio)
apt-get install -d jackd2 kxstudio-meta-audio-plugins-collection kxstudio-desktop-neon kxstudio-meta-all kubuntu-restricted-extras kxstudio-meta-restricted-extras kxstudio-meta-live-conflicts

# Test
rm /var/cache/apt/archives/wine-rt*

apt-get update; apt-get dist-upgrade
apt-get clean

# 64bit fix
dpkg --add-architecture i386
apt-get update; apt-get dist-upgrade

# Install extras
apt-get install kxstudio-docs indicator-cpufreq kxstudio-meta-live-conflicts \
 sni-qt libgl1-mesa-dri libgl1-mesa-glx libegl1-mesa libglapi-mesa libgles2-mesa libglu1-mesa \
 sni-qt:i386 libgl1-mesa-dri:i386 libgl1-mesa-glx:i386 libegl1-mesa:i386 libglapi-mesa:i386 libgles2-mesa:i386 libglu1-mesa:i386

# Make sure some specific packages are installed
apt-get install zynaddsubfx-git
apt-get purge libpulse0

# Remove deprecated/dummy
apt-get purge kxstudio-meta-live-conflicts \
  carla calf-plugins-git ardour3 amsynth-dssi drumkv1 samplv1 synthv1 composite composite-data flashplugin-installer \
  hydrogen-drumkits hydrogen-drumkits-effects fluid-soundfont-gm

# Cleanup
apt-get autoremove
apt-get clean

dpkg -l | grep "rc "

## ---- PAUSE HERE ----- ##
# Before installing ubiquity in the live session, you'll need to run this outside:
$ sudo mkdir -p /home/falktx/livecd/cd/casper/
$ sudo touch /home/falktx/livecd/cd/casper/filesystem.manifest-desktop
$ sudo chmod 777 /home/falktx/livecd/cd/casper/filesystem.manifest-desktop
$ sudo chroot /home/falktx/livecd/custom dpkg-query -W --showformat='\${Package} \${Version}\n' > /home/falktx/livecd/cd/casper/filesystem.manifest-desktop"

# sudo mkdir -p /home/falktx/livecd/cd/casper/
# sudo touch /home/falktx/livecd/cd/casper/filesystem.manifest-desktop
# sudo chmod 777 /home/falktx/livecd/cd/casper/filesystem.manifest-desktop
# sudo chroot /home/falktx/livecd/custom dpkg-query -W --showformat='${Package} ${Version}\n' > /home/falktx/livecd/cd/casper/filesystem.manifest-desktop

echo "## ----- END PAUSE ----- ##

# Now install the liveDVD specific packages
apt-get install ubiquity-frontend-kde casper lupin-casper discover jfsutils xfsprogs

# Just in case you want to revert the live-dvd install action
apt-get purge \
  apt-clone archdetect-deb btrfs-progs btrfs-tools casper cifs-utils \
  dmraid dpkg-repack jfsutils kpartx kpartx-boot libdebian-installer4 \
  libdmraid1.0.0.rc16 libiw30 localechooser-data lupin-casper \
  python-crypto python-ldb python-samba python-tdb python3-icu \
  python3-pam python3-pyqt5.qtwebkit rdate \
  samba-common samba-common-bin sbsigntool \
  ubiquity ubiquity-casper ubiquity-frontend-kde ubiquity-ubuntu-artwork \
  user-setup xfsprogs
"
sudo chroot /home/falktx/livecd/custom
echo "done"
exit
    ;;

    custom_end)
echo "run this now:

rm -f /var/kxstudio/*

apt-get clean
rm -rf /tmp/*
rm -f /etc/hosts /etc/resolv.conf
# ln -s /run/resolvconf/resolv.conf /etc/resolv.conf

echo '[keyfile]
unmanaged-devices=none
' > /etc/NetworkManager/conf.d/10-globally-managed-devices.conf

chmod 644 /root/.{b,p}*
find /var/log -type f | while read file; do cat /dev/null | tee $file; done
umount /dev/pts
umount -lf /proc
umount -lf /sys
exit
sudo umount /home/falktx/livecd/custom/sys
sudo nano /home/falktx/livecd/custom/root/.bash_history
"
exit
  ;;

    mksquash)
sudo mkdir -p /home/falktx/livecd/cd/casper/
cd /home/falktx/livecd/cd/casper/
sudo su root -c "printf $(sudo du -sx --block-size=1 /home/falktx/livecd/custom | cut -f1) > ./filesystem.size"
sudo touch ./filesystem.manifest
sudo touch ./filesystem.manifest-remove
sudo chmod 777 ./filesystem.manifest
sudo chmod 777 ./filesystem.manifest-remove
sudo chroot /home/falktx/livecd/custom dpkg-query -W --showformat='${Package} ${Version}\n' > ./filesystem.manifest
if [ -f ./filesystem.manifest-desktop ]; then
  comm -3 <(cat ./filesystem.manifest | awk '{print $1}' | sort) <(cat ./filesystem.manifest-desktop | awk '{print $1}' | sort) > ./filesystem.manifest-remove
fi
sudo rm -f ./filesystem.squashfs ./filesystem.manifest-desktop
sudo mksquashfs /home/falktx/livecd/custom ./filesystem.squashfs -noappend -comp xz
echo "done"
exit
    ;;

    mkart)
if [ ! -f /home/falktx/livecd/iso-stuff.7z ]; then
  echo "Please copy iso-stuff.7z to /home/falktx/livecd before continuing"
  exit
fi

sudo mkdir -p /home/falktx/livecd/cd
cd /home/falktx/livecd/cd
sudo 7z x -y ../iso-stuff.7z

echo "Please edit these files manually:
/home/falktx/livecd/cd/.disk/info
/home/falktx/livecd/cd/.disk/release_notes_url
/home/falktx/livecd/cd/README.diskdefines
... grub
/home/falktx/livecd/cd/isolinux/txt.cfg
/home/falktx/livecd/cd/preseed/kxstudio.seed
"
exit
    ;;

    mkboot)
sudo mkdir -p /home/falktx/livecd/cd/casper/
cd /home/falktx/livecd/
sudo rm -f cd/casper/vmlinuz cd/casper/vmlinuz.efi cd/casper/initrd.lz cd/casper/initrd_tmp.gz
sudo cp custom/boot/vmlinuz-* cd/casper/vmlinuz
sudo cp custom/boot/initrd.img-* cd/casper/initrd.lz

# cd /home/falktx/livecd/cd/casper
# sudo rm -rf ext
# sudo mkdir ext
# cd ext
# sudo su root -c 'cat ../initrd_tmp.gz | cpio -i'
# 
# # fix links
# LINKS=`find . -type l`
# for i in ${LINKS}; do
#   FILE=`readlink ${i}`
#   CUSTOM=0
#   if [ "${FILE}" == "/proc/mounts" ]; then
#     continue
#   elif [ "${FILE}" == "busybox" ]; then
#     FILE="/bin/busybox"
#     CUSTOM=1
#   elif [ "${FILE}" == "lvm" ]; then
#     FILE="/sbin/lvm"
#     CUSTOM=1
#   elif [ "${FILE}" == "/usr/share/plymouth/themes/kxstudio-logo/kxstudio-logo.plymouth" ]; then
#     FILE="/lib/plymouth/themes/kxstudio-logo/kxstudio-logo.plymouth"
#     CUSTOM=2
#   elif [ "${FILE}" == "/usr/share/plymouth/themes/kxstudio-text/kxstudio-text.plymouth" ]; then
#     FILE="/lib/plymouth/themes/kxstudio-text/kxstudio-text.plymouth"
#     CUSTOM=2
#   fi
#   sudo rm "${i}"
#   if [ "${CUSTOM}" == "1" ]; then
#     sudo cp -v ".${FILE}" "${i}"
#   elif [ "${CUSTOM}" == "2" ]; then
#     sudo cp -v "../../../custom/${FILE}" "${i}"
#   else
#     DIRNAME=`dirname ${i}`
#     if [ "${DIRNAME}" == "./sbin" ]; then
#       sudo cp -v "../../../custom/${FILE}" "${i}"
#     else
#       sudo cp -v "../../../custom/${DIRNAME}/${FILE}" "${i}" || echo "${DIRNAME} || ${FILE} || ${i}"
#     fi
#   fi
# done
# 
# sudo su root -c 'find . | cpio --dereference -o -H newc | lzma -7 > ../initrd.lz'
# cd ..
# sudo rm -rf ext initrd_tmp.gz

echo "done"
exit
    ;;

    md5sum)
cd /home/falktx/livecd/cd
sudo chmod 777 -R .
sudo rm -f md5sum.txt MD5SUMS
sudo su root -c "find . -type f -print0 | xargs -0 md5sum > ../md5sum.txt"
sudo mv ../md5sum.txt .
echo "done"
exit
    ;;

    iso)
ARG2="$2"
ARG3="$3"
if [ "$ARG2""0" == "0" ]; then
echo "usage: $0 iso <filename> <name>"
exit
fi
if [ "$ARG3""0" == "0" ]; then
echo "usage: $0 iso <filename> <name>"
exit
fi

cd /home/falktx/livecd/cd

# i386 ends on -boot-info-table

sudo xorriso -as mkisofs \
    -r \
    -V "$ARG3" \
    -o "/home/falktx/livecd/${ARG2}.iso" \
    -J \
    -isohybrid-mbr isolinux/isohdpfx.bin \
    -partition_offset 16 \
    -joliet-long \
    -cache-inodes \
    -b isolinux/isolinux.bin \
    -c isolinux/boot.cat \
    -no-emul-boot \
    -boot-load-size 4 \
    -boot-info-table \
    -eltorito-alt-boot \
    -e boot/grub/efi.img \
    -no-emul-boot \
    -isohybrid-gpt-basdat \
    -isohybrid-apm-hfsplus \
    .

echo "done"
exit
    ;;

    clean)
sudo umount /tmp/livecd/
sudo umount /home/falktx/livecd/squashfs/
sudo rm -rf /tmp/livecd/
sudo rm -rf /home/falktx/livecd/
echo "done"
exit
    ;;

    *)
echo "usage: $0 <cmd>

 1 - squash <version> <arch> [version=bionic [arch=i386/amd64]
 2 - custom
 3 - custom_end
 4 - mksquash
 5 - mkart <arch> <distro-name> [arch=i386/amd64] [distro=KXStudio (no spaces!)]
 6 - mkboot
 7 - md5sum
 8 - iso <filename> <name> [file/name=KXStudio_14.04_32bit]

 x - clean
"
exit
    ;;
esac
